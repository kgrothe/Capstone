{"version":3,"sources":["app.2cf45a90.css","webpack:///src/C:/Users/kgrot/Projects/Capstone/src/src/App.vue","webpack:///src/components/C:/Users/kgrot/Projects/Capstone/src/components/src/components/Home.vue","webpack:///src/components/C:/Users/kgrot/Projects/Capstone/src/components/src/components/Options.vue","webpack:///src/components/C:/Users/kgrot/Projects/Capstone/src/components/src/components/HowMany.vue","webpack:///src/components/C:/Users/kgrot/Projects/Capstone/src/components/src/components/NumberTrivia.vue","webpack:///src/components/C:/Users/kgrot/Projects/Capstone/src/components/src/components/APOD.vue","webpack:///src/components/C:/Users/kgrot/Projects/Capstone/src/components/src/components/Images.vue"],"names":[],"mappings":"AAAA,qEAAqE,CC2BrE,KACA,0BAAA,CAEA,kCAAA,CACA,iCAAA,CACA,iBAAA,CACA,UAAA,CACA,eDxBA,CCiCA,GACA,gBDxBA,CEAA,uBACA,gBFKA,CEFA,oBACA,eFIA,CEDA,oBACA,eFGA,CEDA,oBACA,oBAAA,CACA,SFGA,CEDA,oBACA,oBAAA,CACA,aFGA,CEDA,mBACA,UFGA,CGDA,0BACA,gBAAA,CAEA,yBAAA,CAAA,oBAAA,CACA,eAAA,CAEA,WAAA,CACA,SHMA,CGEA,wBAIA,WAAA,CACA,YAAA,CACA,UAAA,CACA,aAAA,CACA,cAAA,CACA,iBAAA,CACA,qBHKA,CGFA,8BACA,wBHIA,CGcA,0BACA,UAAA,CACA,YHGA,CGAA,qBACA,WHEA,CGCA,oBACA,eHCA,CGCA,oBACA,oBAAA,CACA,SHCA,CGCA,oBACA,oBAAA,CACA,aHCA,CGCA,mBACA,UAAA,CACA,oBAAA,CACA,eHCA,CGEA,yBACA,aAAA,CACA,kBHAA,CIPA,0BACA,gBJYA,CITA,0BACA,UAAA,CACA,YJWA,CIRA,qBACA,WJUA,CIPA,oBACA,eJSA,CIPA,oBACA,oBAAA,CACA,SJSA,CIPA,oBACA,oBAAA,CACA,aJSA,CIPA,mBACA,UJSA,CKtDA,+BACA,gBL4DA,CKzDA,oBACA,eL2DA,CKzDA,oBACA,oBAAA,CACA,SL2DA,CKzDA,oBACA,oBAAA,CACA,aL2DA,CKzDA,mBACA,UL2DA,CKxDA,oCACA,sBL0DA,CMrGA,uBACA,gBN0GA,CMvGA,0BACA,UAAA,CACA,YNyGA,CMtGA,qBACA,WNwGA,CMrGA,oBACA,eNuGA,CMrGA,oBACA,oBAAA,CACA,SNuGA,CMrGA,oBACA,oBAAA,CACA,aNuGA,CMrGA,mBACA,UNuGA,CO5DA,yBACA,gBPiEA,CO7DA,2BACA,wBP+DA,CO3DA,0BACA,UAAA,CACA,YP6DA,CO1DA,qBACA,WP4DA,COzDA,uBACA,iBP2DA,COxDA,2BACA,SP0DA,COtDA,oBACA,ePwDA,COrDA,oBACA,oBAAA,CACA,SPuDA,COrDA,oBACA,oBAAA,CACA,aPuDA,COrDA,mBACA,UPuDA","file":"app.2cf45a90.css","sourcesContent":["@import url(https://fonts.googleapis.com/css?family=Exo&display=swap);\n\n#app {\r\n  font-family: 'Exo', sans-serif;\r\n /* font-family: 'Avenir', Helvetica, Arial, sans-serif; */\r\n  -webkit-font-smoothing: antialiased;\r\n  -moz-osx-font-smoothing: grayscale;\r\n  text-align: center;\r\n  color: black;\r\n  margin-top: 60px;\n}\r\n\r\n/*body {\r\n  background-image: url('./assets/PerseusPisces.jpg');  \r\n  background-repeat: no-repeat;\r\n  background-size: cover;\r\n}\r\n*/\nh1 {\r\n  font-size: 2.5rem;\n}\r\n\r\n\n\n.home[data-v-58d55b40] {\r\n  font-size: 1.4rem;\n}\nh1[data-v-58d55b40] {\r\n  font-weight: bold;\n}\nh3[data-v-58d55b40] {\r\n  margin: 40px 0 0;\n}\nul[data-v-58d55b40] {\r\n  list-style-type: none;\r\n  padding: 0;\n}\nli[data-v-58d55b40] {\r\n  display: inline-block;\r\n  margin: 0 10px;\n}\na[data-v-58d55b40] {\r\n  color: black;\n}\r\n\n\n.options[data-v-2d0a174e] {\r\n  font-size: 1.4rem; \r\n /* padding-left: 30%; */\r\n  -ms-flex-line-pack: center;\r\n      align-content: center;\r\n  text-align: left;\r\n /* text-align: left;*/\r\n margin: auto;\r\n width: 35%;\n}\r\n\r\n/*options.container {\r\n  text-align: left;\r\n}\r\n*/\nbutton[data-v-2d0a174e] {   \r\n /* border-width: .1em;\r\n  border-color: darkslategray;  \r\n  background-color: aliceblue;*/\r\n  border: none;\r\n  padding: .5em;\r\n  color: navy;  \r\n  font-size: 1em;\r\n  cursor: pointer;\r\n  margin-right: .5em;\r\n  background-color: white;\n}\nbutton[data-v-2d0a174e]:hover {\r\n  background-color: darkred;\n}\r\n\r\n/*.svg-inline--fa {\r\n  padding: .25em;\r\n}\r\n\r\n*/\r\n/*button {\r\n  width: 35%;\r\n  padding: .75em;\r\n  border-width:.1em;\r\n  border-radius: 25px;\r\n  border-color: black;  \r\n  font-size: .9em;\r\n}\r\n*/\n.special[data-v-2d0a174e] {\r\n  color: black;\r\n  font-size: .80;\n}\nimg[data-v-2d0a174e] {\r\n  width: 400px;\n}\nh3[data-v-2d0a174e] {\r\n  margin: 40px 0 0;\n}\nul[data-v-2d0a174e] {\r\n  list-style-type: none;\r\n  padding: 0;\n}\nli[data-v-2d0a174e] {\r\n  display: inline-block;\r\n  margin: 0 10px;\n}\na[data-v-2d0a174e] {\r\n    color: navy;  \r\n    text-decoration: none;\r\n    font-weight: bold;\n}\na[data-v-2d0a174e]:hover {\r\n  color: darkred;\r\n  font-weight: bolder;\n}\r\n\r\n\n\n.howmany[data-v-187fd80c] {\r\n  font-size: 1.4rem;\n}\n.special[data-v-187fd80c] {\r\n  color: black;\r\n  font-size: .80;\n}\nimg[data-v-187fd80c] {\r\n  width: 400px;\n}\nh3[data-v-187fd80c] {\r\n  margin: 40px 0 0;\n}\nul[data-v-187fd80c] {\r\n  list-style-type: none;\r\n  padding: 0;\n}\nli[data-v-187fd80c] {\r\n  display: inline-block;\r\n  margin: 0 10px;\n}\na[data-v-187fd80c] {\r\n  color: black;\n}\r\n\r\n\r\n\n\n.numbertrivia[data-v-25577fe6] {\r\n    font-size: 1.4rem\n}\nh3[data-v-25577fe6] {\r\n  margin: 40px 0 0;\n}\nul[data-v-25577fe6] {\r\n  list-style-type: none;\r\n  padding: 0;\n}\nli[data-v-25577fe6] {\r\n  display: inline-block;\r\n  margin: 0 10px;\n}\na[data-v-25577fe6] {\r\n  color: black;\n}\nrouter-link-active[data-v-25577fe6] {\r\n  background-color: green;\n}\r\n\r\n\n\n.apod[data-v-8b242a58] {\r\n  font-size: 1.4rem;\n}\n.special[data-v-8b242a58] {\r\n  color: black;\r\n  font-size: .80;\n}\nimg[data-v-8b242a58] {\r\n  width: 400px;\n}\nh3[data-v-8b242a58] {\r\n  margin: 40px 0 0;\n}\nul[data-v-8b242a58] {\r\n  list-style-type: none;\r\n  padding: 0;\n}\nli[data-v-8b242a58] {\r\n  display: inline-block;\r\n  margin: 0 10px;\n}\na[data-v-8b242a58] {\r\n  color: black;\n}\r\n\r\n\n\n.images[data-v-6f7c92ac] {\r\n  font-size: 1.4rem;\n}\n.p search[data-v-6f7c92ac] {\r\n  text-transform: uppercase;\n}\n.special[data-v-6f7c92ac] {\r\n  color: black;\r\n  font-size: .80;\n}\nimg[data-v-6f7c92ac] {\r\n  width: 400px;\n}\n.grid[data-v-6f7c92ac] {\r\n  border-color: lightslategray;\n}\n.grid.img[data-v-6f7c92ac] {\r\n  width: 20%;\n}\nh3[data-v-6f7c92ac] {\r\n  margin: 40px 0 0;\n}\nul[data-v-6f7c92ac] {\r\n  list-style-type: none;\r\n  padding: 0;\n}\nli[data-v-6f7c92ac] {\r\n  display: inline-block;\r\n  margin: 0 10px;\n}\na[data-v-6f7c92ac] {\r\n  color: black;\n}\r\n\r\n\r\n\n\n/*# sourceMappingURL=app.2cf45a90.css.map*/","<template>\r\n  <div id=\"app\">\r\n            \r\n    <img alt=\"Earth from space\" src=\"./assets/RoundEarth.png\"> \r\n \r\n    <h1>Space & Numbers</h1>  \r\n\r\n    <router-view/>\r\n\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n\r\n\r\n\r\nexport default {\r\n  name: 'app',  \r\n  }\r\n\r\n\r\n</script>\r\n\r\n<style>\r\n@import url('https://fonts.googleapis.com/css?family=Exo&display=swap');\r\n\r\n\r\n#app {\r\n  font-family: 'Exo', sans-serif;\r\n /* font-family: 'Avenir', Helvetica, Arial, sans-serif; */\r\n  -webkit-font-smoothing: antialiased;\r\n  -moz-osx-font-smoothing: grayscale;\r\n  text-align: center;\r\n  color: black;\r\n  margin-top: 60px;\r\n}\r\n\r\n/*body {\r\n  background-image: url('./assets/PerseusPisces.jpg');  \r\n  background-repeat: no-repeat;\r\n  background-size: cover;\r\n}\r\n*/\r\nh1 {\r\n  font-size: 2.5rem;\r\n}\r\n\r\n</style>\r\n","<template>\r\n  <div class=\"home\">\r\n\r\n  <p>\r\n    <router-link v-bind:to=\"{ name:'options' }\">Start here</router-link>        \r\n  </p>   \r\n       \r\n  </div>\r\n\r\n</template>\r\n\r\n<!--\r\n<script>\r\n\r\n\r\n\r\n</script>-->\r\n\r\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\r\n<style scoped>\r\n.home {\r\n  font-size: 1.4rem;\r\n}\r\n\r\nh1 {\r\n  font-weight: bold;\r\n}\r\n\r\nh3 {\r\n  margin: 40px 0 0;\r\n}\r\nul {\r\n  list-style-type: none;\r\n  padding: 0;\r\n}\r\nli {\r\n  display: inline-block;\r\n  margin: 0 10px;\r\n}\r\na {\r\n  color: black;\r\n}\r\n</style>\r\n","<template>\r\n\r\n<div class=\"options\">\r\n  \r\n       \r\n      <button @click=\"$router.push('howmany')\"><font-awesome-icon icon=\"user-astronaut\" />\r\n      </button>\r\n      <router-link v-bind:to=\"{ name: 'howmany' }\">Number of People in Space      \r\n      </router-link>     \r\n      <br>\r\n      \r\n      <button @click=\"$router.push('numbertrivia')\"><font-awesome-icon icon=\"question-circle\" />\r\n      </button>\r\n      <router-link v-bind:to=\"{ name: 'numbertrivia' }\">Number Trivia\r\n      </router-link>      \r\n      <br>\r\n\r\n      <button @click=\"$router.push('apod')\"><font-awesome-icon icon=\"satellite\" />\r\n      </button>\r\n      <router-link v-bind:to=\"{ name: 'apod' }\">Astronomy Picture of the Day    \r\n      </router-link>\r\n      <br>\r\n\r\n      <button @click=\"$router.push('images')\"><font-awesome-icon icon=\"space-shuttle\" />\r\n      </button>\r\n      <router-link v-bind:to=\"{ name: 'images' }\"> Space Images       \r\n      </router-link>\r\n      \r\n      \r\n     \r\n    \r\n  </div>\r\n\r\n</template>\r\n    \r\n    \r\n\r\n\r\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\r\n\r\n<style scoped>\r\n\r\n.options {\r\n  font-size: 1.4rem; \r\n /* padding-left: 30%; */\r\n  align-content: center;\r\n  text-align: left;\r\n /* text-align: left;*/\r\n margin: auto;\r\n width: 35%;\r\n\r\n}\r\n\r\n/*options.container {\r\n  text-align: left;\r\n}\r\n*/\r\nbutton {   \r\n /* border-width: .1em;\r\n  border-color: darkslategray;  \r\n  background-color: aliceblue;*/\r\n  border: none;\r\n  padding: .5em;\r\n  color: navy;  \r\n  font-size: 1em;\r\n  cursor: pointer;\r\n  margin-right: .5em;\r\n  background-color: white;\r\n}\r\n\r\nbutton:hover {\r\n  background-color: darkred;\r\n\r\n}\r\n\r\n/*.svg-inline--fa {\r\n  padding: .25em;\r\n}\r\n\r\n*/\r\n/*button {\r\n  width: 35%;\r\n  padding: .75em;\r\n  border-width:.1em;\r\n  border-radius: 25px;\r\n  border-color: black;  \r\n  font-size: .9em;\r\n}\r\n*/\r\n.special {\r\n  color: black;\r\n  font-size: .80;\r\n}\r\n\r\nimg {\r\n  width: 400px;\r\n}\r\n\r\nh3 {\r\n  margin: 40px 0 0;\r\n}\r\nul {\r\n  list-style-type: none;\r\n  padding: 0;\r\n}\r\nli {\r\n  display: inline-block;\r\n  margin: 0 10px;\r\n}\r\na {\r\n    color: navy;  \r\n    text-decoration: none;\r\n    font-weight: bold;    \r\n  }\r\n\r\na:hover {\r\n  color: darkred;\r\n  font-weight: bolder;\r\n}\r\n\r\n</style>\r\n","<template>\r\n  <div class=\"howmany\">\r\n    <p>\r\n      <router-link v-bind:to=\"{ name:'numbertrivia' }\"> {{ results.number }} </router-link>\r\n    </p>        \r\n    <p>\r\n      <router-link v-bind:to=\"{ name:'options' }\">Home</router-link>    \r\n    </p> \r\n    \r\n   <form v-on:submit.prevent=\"findNumber\">\r\n     <p>How many people are in space today</p>\r\n    <p><button type=\"submit\">?</button></p>\r\n   </form> \r\n\r\n      \r\n  <h4>{{ results }}</h4>\r\n\r\n\r\n\r\n<ul>  \r\n<li v-for=\"result in results\">\r\n  {{ results[1].name }}\r\n  <br>\r\n  {{ results[3].name }}\r\n</li>\r\n\r\n</ul>  \r\n\r\n\r\n<ol>\r\n  <li v-for=\"name in results\">{{ name }}>\r\n  </li>\r\n  </ol>\r\n\r\n<li>\r\n  <li v-for=\"(result, index) in results\">\r\n    {{ index }} {{ item }}\r\n</li>\r\n</div>\r\n    \r\n</template>\r\n    \r\n<script>\r\nimport axios from 'axios';\r\n\r\n\r\nexport default {\r\n  name: 'howmany',\r\n  data () {\r\n    return {\r\n      errors: [],\r\n      results: \"\"\r\n    //  results: \"\",\r\n      // [\r\n     //   { \r\n       //   people: \r\n      //    { \r\n      //      name: \"\"\r\n     //     }\r\n    //    }\r\n     // ],\r\n      \r\n      \r\n    }\r\n\r\n  },\r\n\r\n//created: function () {\r\n methods:{\r\n   findNumber:function(){\r\n\r\n  \r\n  let proxyUrl = 'https://cors-anywhere.herokuapp.com/'\r\n  let targetUrl = 'http://api.open-notify.org/astros.json'\r\n\r\n\r\n  axios.get(proxyUrl + targetUrl)\r\n    .then(response => {\r\n      this.results = response.data.people;\r\n      console.log(response.data)\r\n      console.log(response.data.people)\r\n     console.log(response.data.people[0].name)\r\n   console.log(response.data.people[1].name)\r\n          })\r\n    .catch(error => {\r\n      this.errors.push(error);\r\n    });\r\n}\r\n }\r\n\r\n// methods: {\r\n  // getTrivia: function() {\r\n  // axios.get('http://numbersapi.com/random/trivia')\r\n  //.then(response => {\r\n  //  this.results = response.data;\r\n  //  console.log(response.data)\r\n  // })\r\n  //  .catch(e => {\r\n  //    this.errors.push(e)\r\n  //  })\r\n // }\r\n // }\r\n}\r\n\r\n</script>\r\n\r\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\r\n\r\n<style scoped>\r\n\r\n.howmany {\r\n  font-size: 1.4rem;\r\n}\r\n\r\n.special {\r\n  color: black;\r\n  font-size: .80;\r\n}\r\n\r\nimg {\r\n  width: 400px;\r\n}\r\n\r\nh3 {\r\n  margin: 40px 0 0;\r\n}\r\nul {\r\n  list-style-type: none;\r\n  padding: 0;\r\n}\r\nli {\r\n  display: inline-block;\r\n  margin: 0 10px;\r\n}\r\na {\r\n  color: black;\r\n}\r\n\r\n\r\n</style>\r\n","<template>\r\n  <div class=\"numbertrivia\">\r\n\r\n    <p><router-link v-bind:to=\"{ name:'options' }\">Home</router-link>\r\n    </p>\r\n\r\n    <h3>Number Trivia</h3>\r\n    \r\n     \r\n    <p> {{ results }}</p>\r\n \r\n    <form v-on:submit.prevent=\"getTrivia\">\r\n      <p>Enter a number: <input type=\"number\" v-model=\"number\"> to display number fact.<br><br>\r\n      <button type=\"submit\">Show me the trivia </button></p>\r\n    </form>\r\n \r\n   \r\n  </div>\r\n</template>\r\n\r\n<script>\r\n\r\nimport axios from 'axios';\r\n\r\nexport default {\r\n  name: 'numbertrivia',\r\n  data () {\r\n    return {\r\n      errors: [],\r\n      results: \"\",\r\n      number: \"\"\r\n    }\r\n\r\n  },\r\n\r\n//created: function () {\r\n methods:{\r\n   getTrivia:function(){\r\n\r\n  \r\n let proxyUrl = 'https://cors-anywhere.herokuapp.com/'\r\n let targetUrl = 'http://numbersapi.com/' \r\n\r\n//let targetUrl = 'http://numbersapi.com/',{\r\n // params: {\r\n  //  number:this.number,\r\n  //},\r\n   //}\r\n\r\naxios.get(proxyUrl + targetUrl + this.number)\r\n  //axios.get(proxyUrl + targetUrl, {\r\n\r\n    //axios.get(proxyUrl + targetUrl)\r\n   // params: {\r\n     // query:this.number,\r\n    // random:this.number,\r\n //   }\r\n // })\r\n  \r\n    .then(response => {\r\n      this.results = response.data;\r\n      console.log(response.data)\r\n      console.log(this.number)\r\n          })\r\n    .catch(error => {\r\n      this.errors.push(error);\r\n    });\r\n//}\r\n //}\r\n\r\n// methods: {\r\n  // getTrivia: function() {\r\n  // axios.get('http://numbersapi.com/random/trivia')\r\n  //.then(response => {\r\n  //  this.results = response.data;\r\n  //  console.log(response.data)\r\n  // })\r\n  //  .catch(e => {\r\n  //    this.errors.push(e)\r\n  //  })\r\n // }\r\n // }\r\n}\r\n }\r\n}\r\n</script>\r\n\r\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\r\n<style scoped>\r\n\r\n.numbertrivia {\r\n    font-size: 1.4rem\r\n}\r\n\r\nh3 {\r\n  margin: 40px 0 0;\r\n}\r\nul {\r\n  list-style-type: none;\r\n  padding: 0;\r\n}\r\nli {\r\n  display: inline-block;\r\n  margin: 0 10px;\r\n}\r\na {\r\n  color: black;\r\n}\r\n\r\nrouter-link-active {\r\n  background-color: green;\r\n\r\n}\r\n\r\n</style>\r\n","<template>\r\n  <div class=\"apod\">\r\n\r\n    <p>\r\n    <router-link v-bind:to=\"{ name:'options' }\">Home</router-link>    \r\n    </p> \r\n\r\n    <h3> Astronomy Picture of the Day</h3>\r\n  \r\n    <form v-on:submit.prevent=\"getImage\">\r\n      <p><button type=\"submit\">VIEW</button></p>\r\n    </form> \r\n\r\n    <p> {{ results.message }}</p>\r\n\r\n<!-- test image -->\r\n\r\n  <span><img v-bind:src=\"results.url\" /></span> \r\n  <h3> {{ results.title }} </h3>\r\n  <h4> {{ results.copyright }} </h4>\r\n  <h5> {{ results.explanation }} </h5>\r\n\r\n</div>\r\n    \r\n</template>\r\n    \r\n<script>\r\n\r\nimport axios from 'axios';\r\n\r\nexport default {\r\n  name: 'apod',\r\n    data () {\r\n        return {        \r\n          errors: [],\r\n          results: [\r\n            {              \r\n            url: null,             \r\n            }\r\n          ],\r\n        }\r\n},\r\nmethods :{\r\n  getImage: function () {\r\n\r\n  axios.get('https://api.nasa.gov/planetary/apod?api_key=EMjuzVPgN7YuVVONc0GFmXcK518Zo9wRzQuC5ahb')\r\n   .then(response => {\r\n    this.results = response.data;\r\n    this.results.url = data.url;\r\n    //document data url? trying without \"document\"\r\n    //this.results.url = document.data.url;\r\n\r\n    console.log(response.data)\r\n    })\r\n.catch(e => {\r\n  this.errors.push(e)\r\n  })\r\n}\r\n}\r\n}\r\n\r\n</script>\r\n\r\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\r\n\r\n<style scoped>\r\n\r\n.apod {\r\n  font-size: 1.4rem;\r\n}\r\n\r\n.special {\r\n  color: black;\r\n  font-size: .80;\r\n}\r\n\r\nimg {\r\n  width: 400px;\r\n}\r\n\r\nh3 {\r\n  margin: 40px 0 0;\r\n}\r\nul {\r\n  list-style-type: none;\r\n  padding: 0;\r\n}\r\nli {\r\n  display: inline-block;\r\n  margin: 0 10px;\r\n}\r\na {\r\n  color: black;\r\n}\r\n\r\n</style>\r\n","<template>\r\n  <div class=\"images\">\r\n\r\n\r\n      <p><router-link v-bind:to=\"{ name: 'options' }\">Home</router-link>\r\n      </p>   \r\n\r\n      <h3> NASA Media</h3>\r\n    \r\n    <form v-on:submit.prevent=\"searchImages\">\r\n      \r\n        <p>Search for <input type=\"text\" v-model=\"term\" class=\"search\"></p>\r\n        \r\n      Enter media type <select v-model=\"type\">\r\n          <option disabled value=\"\">Choose one:</option>\r\n          <option>image</option>\r\n          <option>video</option>\r\n          <option>audio</option>\r\n          </select>\r\n          <h3>Show me: {{ term }} {{ type }}</h3>\r\n          <button type=\"submit\"> Search </button>\r\n               \r\n      \r\n    </form> \r\n\r\n    <!--\r\n\r\n  <ul v-if=\"results && results.length > 0\" class=\"results\">\r\n    <li v-for=\"result in results\" class=\"item\">\r\n      <p>{{ results }}</p>\r\n    </li>\r\n  </ul>\r\n\r\n  <div v-else-if=\"results && results.length === 0\" class=\"no-results\">\r\n    <h2>No results found for your search term.</h2>\r\n    <p>Please try a different search.</p>\r\n  </div>\r\n\r\n  <ul v-if=\"errors.length > 0\" class=\"errors\">\r\n    <li v-for=\"error in errors\">\r\n      {{ error.message }}\r\n    </li>\r\n  </ul>\r\n  \r\n <!-- \r\n\r\n<p> {{ results.total_hits }}</p> -->\r\n\r\n\r\n<ul>\r\n  \r\n  <li class=\"grid\" v-for=\"result in results.slice(0,6)\">\r\n    \r\n\r\n    <img v-bind:src=\"result.links[0].href\" />\r\n    \r\n\r\n    <!--\r\n    <p>{{result.data[0].title.substring(0,80)}}</p>-->\r\n</li>\r\n<!--\r\n<span><img v-bind:src=\"results.collection.items.links.href\" /></span> -->\r\n  </li>\r\n  </ul>\r\n<!-- test image -->\r\n<!--\r\n<ul v-for=\"n in 10\">\r\n    <!--\r\n<li v-for=\"item in results\">-->\r\n  \r\n  \r\n  \r\n  <!--\r\n  <div v-for=\"result in results>\"\r\n  \r\n<span><img v-bind:src=\"results.links[n].href\" /></span> \r\n</div>\r\n<!--\r\n</li>-->\r\n<!--\r\n</ul>-->\r\n<!--\r\n <h3> {{ results.collection }} </h3>-->\r\n \r\n\r\n </div>\r\n    \r\n</template>\r\n    \r\n<script>\r\n\r\nimport axios from 'axios';\r\n\r\nexport default {\r\n    name: 'Images',\r\n    data () {\r\n        return {\r\n            \r\n            errors: [],\r\n            results: \"\",                                           \r\n                     \r\n            term: \"\",\r\n            type: \"\"\r\n        }\r\n},\r\nmethods :{\r\n    searchImages: function () {\r\n\r\n  axios.get('https://images-api.nasa.gov/search',{\r\n      params: {\r\n          q:this.term,\r\n          media_type:this.type,               \r\n          \r\n      }\r\n  })\r\n   .then(response => {\r\n    this.results = response.data.collection.items;\r\n     \r\n    console.log(response.data)\r\n    console.log(collection)\r\n    console.log(errors.length)\r\n })\r\n.catch(e => {\r\n  this.errors.push(e)\r\n})\r\n}\r\n}\r\n}\r\n\r\n</script>\r\n\r\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\r\n\r\n<style scoped>\r\n\r\n.images {\r\n  font-size: 1.4rem; \r\n}\r\n\r\n\r\n.p search {\r\n  text-transform: uppercase;\r\n}\r\n\r\n\r\n.special {\r\n  color: black;\r\n  font-size: .80;\r\n}\r\n\r\nimg {\r\n  width: 400px;\r\n}\r\n\r\n.grid {\r\n  border-color: lightslategray;\r\n}\r\n \r\n.grid.img {\r\n  width: 20%;\r\n\r\n}\r\n\r\nh3 {\r\n  margin: 40px 0 0;\r\n}\r\n\r\nul {\r\n  list-style-type: none;\r\n  padding: 0;\r\n}\r\nli {\r\n  display: inline-block;\r\n  margin: 0 10px;\r\n}\r\na {\r\n  color: black;\r\n}\r\n\r\n\r\n</style>\r\n"]}